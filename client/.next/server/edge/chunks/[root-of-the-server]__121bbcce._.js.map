{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/Developer/Projects/tempo/client/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport type { NextRequest } from \"next/server\";\n\nconst protectedRoutes = [\"/dashboard\"]\n\nexport default function middleware(request: NextRequest){\n    const {pathname} = request.nextUrl;\n\n    // Skip middleware for auth callbacks\n    if (pathname.startsWith(\"/api/auth/\")) {\n        return NextResponse.next();\n    }\n\n    const isProtected = protectedRoutes.some((route) =>\n        pathname.startsWith(route)\n    );\n\n    if (isProtected) {\n        // Check for session cookie\n        const sessionCookie = request.cookies.get(\"authjs.session-token\") ||\n                             request.cookies.get(\"__Secure-authjs.session-token\");\n\n        if (!sessionCookie) {\n            return NextResponse.redirect(new URL(\"/login\", request.url));\n        }\n    }\n\n    return NextResponse.next();\n}\n\nexport const config = {\n    matcher: [\n        /*\n         * Match all request paths except for the ones starting with:\n         * - api/auth (auth routes)\n         * - _next/static (static files)\n         * - _next/image (image optimization files)\n         * - favicon.ico (favicon file)\n         */\n        '/((?!api/auth|_next/static|_next/image|favicon.ico).*)',\n    ],\n}"],"names":[],"mappings":";;;;;;AAAA;AAAA;;AAGA,MAAM,kBAAkB;IAAC;CAAa;AAEvB,SAAS,WAAW,OAAoB;IACnD,MAAM,EAAC,QAAQ,EAAC,GAAG,QAAQ,OAAO;IAElC,qCAAqC;IACrC,IAAI,SAAS,UAAU,CAAC,eAAe;QACnC,OAAO,4OAAY,CAAC,IAAI;IAC5B;IAEA,MAAM,cAAc,gBAAgB,IAAI,CAAC,CAAC,QACtC,SAAS,UAAU,CAAC;IAGxB,IAAI,aAAa;QACb,2BAA2B;QAC3B,MAAM,gBAAgB,QAAQ,OAAO,CAAC,GAAG,CAAC,2BACrB,QAAQ,OAAO,CAAC,GAAG,CAAC;QAEzC,IAAI,CAAC,eAAe;YAChB,OAAO,4OAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;QAC9D;IACJ;IAEA,OAAO,4OAAY,CAAC,IAAI;AAC5B;AAEO,MAAM,SAAS;IAClB,SAAS;QACL;;;;;;SAMC,GACD;KACH;AACL"}}]
}