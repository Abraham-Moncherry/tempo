{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/Developer/Projects/tempo/client/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport type { NextRequest } from \"next/server\";\n\nconst protectedRoutes = [\"/dashboard\"]\n\nexport default async function middleware(request: NextRequest){\n    // With database sessions, we check for the session cookie\n    const sessionCookie = request.cookies.get(\"authjs.session-token\") ||\n                         request.cookies.get(\"__Secure-authjs.session-token\");\n\n    const {pathname} = request.nextUrl;\n\n    const isProtected = protectedRoutes.some((route) =>\n        pathname.startsWith(route)\n    );\n\n    if (isProtected && !sessionCookie ) {\n        return NextResponse.redirect(new URL(\"/login\", request.url));\n    }\n\n    return NextResponse.next();\n}\n\nexport const config = {\n    matcher: [\"/dashboard/:path*\"]\n}"],"names":[],"mappings":";;;;;;AAAA;AAAA;;AAGA,MAAM,kBAAkB;IAAC;CAAa;AAEvB,eAAe,WAAW,OAAoB;IACzD,0DAA0D;IAC1D,MAAM,gBAAgB,QAAQ,OAAO,CAAC,GAAG,CAAC,2BACrB,QAAQ,OAAO,CAAC,GAAG,CAAC;IAEzC,MAAM,EAAC,QAAQ,EAAC,GAAG,QAAQ,OAAO;IAElC,MAAM,cAAc,gBAAgB,IAAI,CAAC,CAAC,QACtC,SAAS,UAAU,CAAC;IAGxB,IAAI,eAAe,CAAC,eAAgB;QAChC,OAAO,4OAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC9D;IAEA,OAAO,4OAAY,CAAC,IAAI;AAC5B;AAEO,MAAM,SAAS;IAClB,SAAS;QAAC;KAAoB;AAClC"}}]
}